#reqmod : "std"

#alias : WIDTH : 10
#alias : HEIGHT : 10
#alias : GRID_SIZE : 111
#static : DATA : 120

#func.i8 : INIT : RET
    mov.addr : $ac : >>DATA
    add.addr : $ac : >>GRID_SIZE
    sub.addr : $ac : 1
    pushc.addr : @$ac

    mov.addr : $ac : >>DATA
    #label : SPACE_LOOP_BEGIN
        mov.i8 : @$ac : 35
        add.addr : $ac : 1
    jlt.addr : SPACE_LOOP_BEGIN : @$ac : @~0

    mov.addr : $ac : >>DATA
    sub.addr : $ac : 1
    #label : NEWLINE_LOOP_BEGIN
        add.addr : $ac : 11
        mov.i8 : @$ac : 10
    jlt.addr : NEWLINE_LOOP_BEGIN : @$ac : @~0
    return
#end

#func.i8 : CLEAR : RET
    mov.u64 : $ac : >>HEIGHT
    add.u64 : $ac : 2
    calx.i8 : >>std>>prints : 0 : addr."\r"
    #label : LOOP_BEGIN
        calx.i8 : >>std>>prints : 0 : addr."\e[1F"
        sub.u64 : $ac : 1
    jne.u64 : LOOP_BEGIN : @$ac : 0
    return
#end

#func.i8 : RENDER : RET
    calx.i8 : >>std>>prints : 0 : addr.>>DATA
    calx.i8 : >>std>>prints : 0 : addr."\n"
    return
#end

#func.u64 : XY_TO_INDEX : RET : u64.X : u64.Y
    mov.u64 : RET : >>WIDTH
    add.u64 : RET : 1
    mul.u64 : RET : @Y
    add.u64 : RET : @X
    return
#end

#func.addr : XY_TO_ADDR : RET : u64.X : u64.Y
    call.u64 : >>XY_TO_INDEX : RET : u64.@X : u64.@Y
    add.addr : RET : >>DATA
    return
#end

#func.i8 : SET_ALIVE : RET : u64.X : u64.Y
    call.addr : >>XY_TO_ADDR : $ac : u64.@X : u64.@Y
    mov.i8 : @$ac : 35
    return
#end

#func.i8 : SET_NOT_ALIVE : RET : u64.X : u64.Y
    call.addr : >>XY_TO_ADDR : $ac : u64.@X : u64.@Y
    mov.i8 : @$ac : 32
    return
#end

#func.i8 : IS_ALIVE : RET : u64.X : u64.Y
    call.addr : >>XY_TO_ADDR : $ac : u64.@X : u64.@Y

    drf : $ac : @$ac
    jeq.i8 : IS_NOT_ALIVE : @$ac : 32

    mov.i8 : RET : 1
    return

    #label : IS_NOT_ALIVE
    mov.i8 : RET : 0
    return
#end

#func.i8 : EVOLVE : RET
    call.i8 : >>IS_ALIVE : $ac : u64.1 : u64.1
    jeq.i8 : IS_ALIVE : @$ac : 1

    call.i8 : >>SET_ALIVE : $ac : u64.1 : u64.1
    return

    #label : IS_ALIVE
    call.i8 : >>SET_NOT_ALIVE : $ac : u64.1 : u64.1
    return
#end



call.i8 : INIT : $td

mov.i64 : $lc : 10
#label : MAIN_LOOP
    call.i8 : RENDER : $td
    calx.i8 : >>std>>sleepms : 0 : u64.1000
    call.i8 : CLEAR : $td
    call.i8 : EVOLVE : $td
    sub.i64 : $lc : 1
jne.i64 : MAIN_LOOP : @$lc : 0

call.i8 : RENDER : $td