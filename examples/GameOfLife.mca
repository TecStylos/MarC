#reqmod : "std"
#manperm : >>std>>ext>>prints
#manperm : >>std>>ext>>sleepms

#alias : FRAME_TIME : 75
#alias : MAIN_LOOP_COUNT : 16
#alias : WIDTH : 10
#alias : HEIGHT : 10
#alias : GRID_SIZE : 111
#static : GRID1 : 120
#static : GRID2 : 120

#alias : LINE_0 : "  #       "
#alias : LINE_1 : "# #       "
#alias : LINE_2 : " ##       "
#alias : LINE_3 : "          "
#alias : LINE_4 : "          "
#alias : LINE_5 : "          "
#alias : LINE_6 : "          "
#alias : LINE_7 : "          "
#alias : LINE_8 : "          "
#alias : LINE_9 : "          "

#func : INIT : addr.BASE
    #local : END_ADDR : ^addr
    mov.addr : END_ADDR : @BASE
    add.addr : END_ADDR : >>GRID_SIZE
    sub.addr : END_ADDR : 1

    mov.addr : $ac : @BASE
    call : >>std>>copyString : addr.@$ac : addr.>>LINE_0
    add.addr : $ac : 11
    call : >>std>>copyString : addr.@$ac : addr.>>LINE_1
    add.addr : $ac : 11
    call : >>std>>copyString : addr.@$ac : addr.>>LINE_2
    add.addr : $ac : 11
    call : >>std>>copyString : addr.@$ac : addr.>>LINE_3
    add.addr : $ac : 11
    call : >>std>>copyString : addr.@$ac : addr.>>LINE_4
    add.addr : $ac : 11
    call : >>std>>copyString : addr.@$ac : addr.>>LINE_5
    add.addr : $ac : 11
    call : >>std>>copyString : addr.@$ac : addr.>>LINE_6
    add.addr : $ac : 11
    call : >>std>>copyString : addr.@$ac : addr.>>LINE_7
    add.addr : $ac : 11
    call : >>std>>copyString : addr.@$ac : addr.>>LINE_8
    add.addr : $ac : 11
    call : >>std>>copyString : addr.@$ac : addr.>>LINE_9

    mov.addr : $ac : @BASE
    sub.addr : $ac : 1
    #label : NEWLINE_LOOP_BEGIN
        add.addr : $ac : 11
        mov.i8 : @$ac : 10
    jlt.addr : NEWLINE_LOOP_BEGIN : @$ac : @END_ADDR
    return
#end

#func : CLEAR
    mov.u64 : $ac : >>HEIGHT
    add.u64 : $ac : 1
    calx : >>std>>exPrints : addr."\r"
    #label : LOOP_BEGIN
        calx : >>std>>exPrints : addr."\e[1F"
        sub.u64 : $ac : 1
    jne.u64 : LOOP_BEGIN : @$ac : 0
    return
#end

#func : RENDER : addr.BASE
    calx : >>std>>exPrints : addr.@BASE
    calx : >>std>>exPrints : addr."\n"
    return
#end

#func.u64 : XY_TO_INDEX : RET : u64.X : u64.Y
    mov.u64 : RET : >>WIDTH
    add.u64 : RET : 1
    mul.u64 : RET : @Y
    add.u64 : RET : @X
    return
#end

#func.addr : XY_TO_ADDR : RET : addr.BASE : u64.X : u64.Y
    call.u64 : >>XY_TO_INDEX : RET : u64.@X : u64.@Y
    add.addr : RET : @BASE
    return
#end

#func : SET_ALIVE : addr.BASE : u64.X : u64.Y
    call.addr : >>XY_TO_ADDR : $ac : addr.@BASE : u64.@X : u64.@Y
    mov.i8 : @$ac : '#'
    return
#end

#func : SET_DEAD : addr.BASE : u64.X : u64.Y
    call.addr : >>XY_TO_ADDR : $ac : addr.@BASE : u64.@X : u64.@Y
    mov.i8 : @$ac : ' '
    return
#end

#func.i8 : IS_ALIVE : RET : addr.BASE : u64.X : u64.Y
    call.addr : >>XY_TO_ADDR : $ac : addr.@BASE : u64.@X : u64.@Y

    drf : $ac : @$ac
    jeq.i8 : IS_NOT_ALIVE : @$ac : ' '

    mov.i8 : RET : 1
    return

    #label : IS_NOT_ALIVE
    mov.i8 : RET : 0
    return
#end

#func.i8 : NEIGHBOR_ALIVE_COUNT : RET : addr.BASE : u64.X : u64.Y
    mov.i8 : RET : 0

    sub.u64 : Y : 1
    jeq.u64 : UPPER_MID_END : @Y : -1
    call.i8 : >>IS_ALIVE : $ac : addr.@BASE : u64.@X : u64.@Y
    add.i8 : RET : @$ac
    #label : UPPER_MID_END

    add.u64 : X : 1
    jeq.u64 : UPPER_RIGHT_END : @Y : -1
    jeq.u64 : UPPER_RIGHT_END : @X : >>WIDTH
    call.i8 : >>IS_ALIVE : $ac : addr.@BASE : u64.@X : u64.@Y
    add.i8 : RET : @$ac
    #label : UPPER_RIGHT_END

    add.u64 : Y : 1
    jeq.u64 : MID_RIGHT_END : @X : >>WIDTH
    call.i8 : >>IS_ALIVE : $ac : addr.@BASE : u64.@X : u64.@Y
    add.i8 : RET : @$ac
    #label : MID_RIGHT_END

    add.u64 : Y : 1
    jeq.u64 : LOWER_RIGHT_END : @Y : >>HEIGHT
    jeq.u64 : LOWER_RIGHT_END : @X : >>WIDTH
    call.i8 : >>IS_ALIVE : $ac : addr.@BASE : u64.@X : u64.@Y
    add.i8 : RET : @$ac
    #label : LOWER_RIGHT_END

    sub.u64 : X : 1
    jeq.u64 : LOWER_MID_END : @Y : >>HEIGHT
    call.i8 : >>IS_ALIVE : $ac : addr.@BASE : u64.@X : u64.@Y
    add.i8 : RET : @$ac
    #label : LOWER_MID_END

    sub.u64 : X : 1
    jeq.u64 : LOWER_LEFT_END : @Y : >>HEIGHT
    jeq.u64 : LOWER_LEFT_END : @X : -1
    call.i8 : >>IS_ALIVE : $ac : addr.@BASE : u64.@X : u64.@Y
    add.i8 : RET : @$ac
    #label : LOWER_LEFT_END

    sub.u64 : Y : 1
    jeq.u64 : MID_LEFT_END : @X : -1
    call.i8 : >>IS_ALIVE : $ac : addr.@BASE : u64.@X : u64.@Y
    add.i8 : RET : @$ac
    #label : MID_LEFT_END

    sub.u64 : Y : 1
    jeq.u64 : UPPER_LEFT_END : @Y : -1
    jeq.u64 : UPPER_LEFT_END : @X : -1
    call.i8 : >>IS_ALIVE : $ac : addr.@BASE : u64.@X : u64.@Y
    add.i8 : RET : @$ac
    #label : UPPER_LEFT_END

    return
#end

#func : EVOLVE_CELL : addr.FROM : addr.TO : u64.X : u64.Y
    #local : NAC : ^i8
    #local : IA : ^i8
    call.i8 : >>NEIGHBOR_ALIVE_COUNT : NAC : addr.@FROM : u64.@X : u64.@Y
    call.i8 : >>IS_ALIVE : IA : addr.@FROM : u64.@X : u64.@Y

    jeq.i8 : CELL_IS_ALIVE : @IA : 1
    jeq.i8 : NEXT_GEN_ALIVE : @NAC : 3
    jmp : NEXT_GEN_DEAD

    #label : CELL_IS_ALIVE
    jeq.i8 : NEXT_GEN_ALIVE : @NAC : 2
    jeq.i8 : NEXT_GEN_ALIVE : @NAC : 3
    jmp : NEXT_GEN_DEAD
    
    #label : NEXT_GEN_ALIVE
    call : >>SET_ALIVE : addr.@TO : u64.@X : u64.@Y
    return
    #label : NEXT_GEN_DEAD
    call : >>SET_DEAD : addr.@TO : u64.@X : u64.@Y
    return
#end

#func : EVOLVE : addr.FROM : addr.TO
    #local : X : ^u64
    #local : Y : ^u64

    mov.u64 : X : 0
    #label : X_LOOP_BEGIN
        mov.u64 : Y : 0
        #label : Y_LOOP_BEGIN
            call : >>EVOLVE_CELL : addr.@FROM : addr.@TO : u64.@X : u64.@Y
            add.u64 : Y : 1
        jne.u64 : Y_LOOP_BEGIN : @Y : >>HEIGHT
        add.u64 : X : 1
    jne.u64 : X_LOOP_BEGIN : @X : >>WIDTH
    return
#end

#func : MAIN
    call : >>INIT : addr.>>GRID1
    call : >>INIT : addr.>>GRID2

    call : >>RENDER : addr.>>GRID1

    mov.i64 : $lc : >>MAIN_LOOP_COUNT
    #label : MAIN_LOOP
        calx : >>std>>exSleepms : u64.>>FRAME_TIME
        call : >>EVOLVE : addr.>>GRID1 : addr.>>GRID2
        call : >>CLEAR
        call : >>RENDER : addr.>>GRID2

        calx : >>std>>exSleepms : u64.>>FRAME_TIME
        call : >>EVOLVE : addr.>>GRID2 : addr.>>GRID1
        call : >>CLEAR
        call : >>RENDER : addr.>>GRID1

        sub.i64 : $lc : 1
    jne.i64 : MAIN_LOOP : @$lc : 0
    return
#end

call : MAIN